<configuration packagingData="true" debug="false" scan="false" scanPeriod="30 seconds">
	<contextName>${log.contextName}</contextName>
	<property name="PATTERN" value="[%X{sessionID}] %cn : %-5level %logger{40} - %m%n%xException" />

	<!-- ROLLING FILE -->
	<appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.rolling-file}.${log.file-extension}</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.rolling-file}.${log.file-extension}.%d{yyyy-MM-dd}</fileNamePattern>
		</rollingPolicy>
		<encoder>
			<pattern>${PATTERN}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
	</appender>
	<appender name="ROLLING_FILE_TIMES" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.rolling-file}.${log.times.file-extension}</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.rolling-file}.${log.times.file-extension}.%d{yyyy-MM-dd}</fileNamePattern>
		</rollingPolicy>
		<encoder>
			<pattern>${PATTERN}</pattern>
		</encoder>
	</appender>
	<appender name="ROLLING_FILE_TRACE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.rolling-file}.${log.trace.file-extension}</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.rolling-file}.${log.trace.file-extension}.%d{yyyy-MM-dd}</fileNamePattern>
		</rollingPolicy>
		<encoder>
			<pattern>${PATTERN}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>TRACE</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- FILE -->
	<appender name="FILE" class="ch.qos.logback.core.FileAppender">
		<file>${log.file}.${log.file-extension}</file>
		<encoder>
			<pattern>${PATTERN}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
	</appender>
	<appender name="FILE_TIMES" class="ch.qos.logback.core.FileAppender">
		<file>${log.file}.${log.times.file-extension}</file>
		<encoder>
			<pattern>${PATTERN}</pattern>
		</encoder>
	</appender>
	<appender name="FILE_TRACE" class="ch.qos.logback.core.FileAppender">
		<file>${log.file}.${log.trace.file-extension}</file>
		<encoder>
			<pattern>${PATTERN}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>TRACE</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- SYSLOG -->
	<appender name="SYSLOG" class="ch.qos.logback.classic.net.SyslogAppender">
		<!-- PASSED FROM POM.XML / MAVEN BUILD PROPS -->
		<facility>${log.facility}</facility>
		<throwableExcluded>true</throwableExcluded>
		<suffixPattern>${PATTERN}</suffixPattern>
	</appender>

	<if condition='"${log.to}".equalsIgnoreCase("SYSLOG")'>
		<then>
			<root level="${log.level}">
				<appender-ref ref="${log.to}"/>
			</root>
		</then>
		<else>
			<root level="${log.level}">
				<priority value="debug"/>
				<appender-ref ref="${log.to}_TRACE"/>
				<appender-ref ref="${log.to}_TIMES"/>
				<appender-ref ref="${log.to}"/>
			</root>
		</else>
	</if>

	<!-- keep Spring quiet -->
	<logger name="org.springframework" level="warn"/>
	<logger name="org.springframework.security.core.SpringSecurityCoreVersion" level="info"/>
	<logger name="org.mitre.openid.connect.config.JsonMessageSource" level="warn"/>
	<logger name="org.apache" level="warn"/>
	<logger name="org.apache.directory" level="warn"/>
	<logger name="org.apache.directory.ldap.client.api.LdapNetworkConnection" level="error"/>
	<logger name="com.zaxxer.hikari" level="warn"/>
	<logger name="org.mitre" level="info"/>
	<!-- PASSED FROM POM.XML / MAVEN BUILD PROPS -->
	<logger name="cz.muni.ics.oidc" level="${log.level}"/>
	<logger name="cz.muni.ics.oidc.aop.WebLoggingAspect" level="debug"/>
	<logger name="cz.muni.ics.oidc.aop.ExecutionTimeLoggingAspect" level="trace">
		<if condition='!"${log.to}".equalsIgnoreCase("SYSLOG")'>
			<then>
				<appender-ref ref="${log.to}_TIMES" />
			</then>
		</if>
	</logger>
	<logger name="org.mitre.openid.connect.web.EndSessionEndpoint" level="${log.level}"/>
	<logger name="net.javacrumbs.shedlock" level="error"/>

</configuration>
